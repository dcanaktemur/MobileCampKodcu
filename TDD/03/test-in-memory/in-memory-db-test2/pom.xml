<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>popsuite.org</groupId>
	<artifactId>InMemoryDbTests</artifactId>
	<version>0.0.2-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>InMemoryDbTests</name>
	<description>
	Unit Testing with an In-Memory Database for a JPA 2.1 Project with Spring 4 and Hibernate 4 
	</description>

	<properties>
	    <mavenVersion>3.0.5</mavenVersion>
		<jdkVersion>1.7</jdkVersion>
		<maven.compiler.target>${jdkVersion}</maven.compiler.target>
		<maven.compiler.source>${jdkVersion}</maven.compiler.source>
		<maven.compiler.compilerVersion>${jdkVersion}</maven.compiler.compilerVersion>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		
		<spring.version>4.1.6.RELEASE</spring.version>
		<hibernate.version>4.3.6.Final</hibernate.version>
		<cglib.version>3.1</cglib.version>
		<junit.version>4.11</junit.version>
		<hsqldb.version>2.3.2</hsqldb.version>
	</properties>

	<dependencies>
	
	<!-- JPA -->
       <dependency><!--  JPA 2.1 implemented by Hibernate 4.3 -->
            <groupId>org.hibernate.javax.persistence</groupId>
            <artifactId>hibernate-jpa-2.1-api</artifactId>
            <version>1.0.0.Final</version>
        </dependency>
        
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-entitymanager</artifactId>
            <version>${hibernate.version}</version>
        </dependency>
		
 		<!-- connection pooling -->
  		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-dbcp2</artifactId>
			<version>2.0.1</version>
		</dependency>            
    
 		<!-- Spring support for orm providers -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${spring.version}</version>
		</dependency> 
		<!-- Spring configuration -->             
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring.version}</version>
		</dependency>              
                 		
 		<!-- Spring to manage transactions -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<version>${spring.version}</version>
		</dependency>                
   
 		<!-- Spring annotations work via proxies which use CGLIB -->
 		<!-- needed only to manage classes without interfaces.
		<dependency>
			<groupId>cglib</groupId>
			<artifactId>cglib-nodep</artifactId>
			<version>${cglib.version}</version>
		</dependency>  
       -->          
   
 		<!-- tests -->  
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring.version}</version>
			<scope>test</scope>
		</dependency>              
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>          
 		
 		<!-- in-memory database provider -->
		<dependency>
			<groupId>org.hsqldb</groupId>
			<artifactId>hsqldb</artifactId>
			<version>${hsqldb.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<artifactId>maven-enforcer-plugin</artifactId>
			</plugin>
		</plugins>
		<pluginManagement>
		    <plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-enforcer-plugin</artifactId>
					<version>1.3.1</version>
					<dependencies>
			            <dependency>
            			    <groupId>org.codehaus.mojo</groupId>
			                <artifactId>animal-sniffer-enforcer-rule</artifactId>
            			    <version>1.11</version>
			            </dependency>
					</dependencies>
					<executions>
						<execution>
							<id>enforce-versions</id>
							<goals>
								<goal>enforce</goal>
							</goals>
							<configuration>
								<rules>
								    <!-- Maven Site Plugin requires Maven 2.2.1 -->
									<!-- FindBugs Maven Plugin 3.0.0 requires Maven 3.0.1 -->
									<!-- Gemini Blueprint requires Maven 3.0.3 -->
									<!-- In-Memory Database Maven Plugin requires 3.0.5 -->
									<requireMavenVersion>
										<version>${mavenVersion}</version>
										<message>[ERROR] OLD MAVEN [${maven.version}] in use.
											Maven ${mavenVersion} or newer is required.</message>
									</requireMavenVersion>
									<!-- Jetty 9 requires JDK 1.7 -->
									<!-- Vaadin 7 requires JDK 1.6 -->
									<!-- Last versions of FindBugs requires JDK 1.7 -->
									<!-- maven-javadoc-plugin requires JDK 1.5 -->
									<!-- commons-dbcp2 requires JDK 1.7 -->
									<requireJavaVersion>
										<version>${jdkVersion}</version>
										<message>[ERROR] OLD JDK [${java.version}] in use. This
											project requires JDK ${jdkVersion} or newer.</message>
									</requireJavaVersion>
									<requirePluginVersions>
										<banLatest>true</banLatest>
										<banRelease>true</banRelease>
										<banSnapshots>true</banSnapshots>
									</requirePluginVersions>
								</rules>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-clean-plugin</artifactId>
					<version>2.5</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.1</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>2.6</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>2.5</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-install-plugin</artifactId>
					<version>2.5.2</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.17</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>2.8.2</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-site-plugin</artifactId>
					<version>3.4</version>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<profiles>
		<profile>
			<id>no-repo-server</id>
			<repositories>
				<repository><!-- required for Spring in version 4.1.0.RC2 -->
    				<id>spring-milestones</id>
		    		<url>http://repo.springsource.org/libs-milestone/</url>
  				</repository>
			</repositories>
		</profile>
	</profiles> 	
</project>
